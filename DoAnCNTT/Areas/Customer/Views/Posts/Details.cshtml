
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model DoAnCNTT.Models.Post
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
        <div class="cover-car-container">
            <div class="main-img">
                <div class="cover-car-item">
                    <img loading="lazy" alt=""
                         src="@Model.Image">
                </div>
            </div>
            <div class="sub-img">
                @foreach (var image in @ViewBag.PostImages)
                {
                    <div class="cover-car-item">
                        <img loading="lazy"
                             src="@image"
                             alt="">
                    </div>
                }
            </div>
        </div>
    <div class="cover-car-container" style="margin-top:20px;">
        <div class="main-img">
            <div>
                <span style="font-size:35px;font-weight:bold;">@Html.DisplayFor(model => model.Name)</span>
                <ul style="display:flex;">
                    @{
                        var rideNumber = Model.RideNumber;
                    }

                    @if (rideNumber > 0)
                    {
                        <li style="display:flex;margin-left:-35px;">
                            <img width="24px" src="@Url.Content("~/images/logo/star-s-fill.svg")" alt=""> <div style="margin-top:0px;font-size:18px;margin-right:10px;">5.0</div>
                        </li>
                        
                        <li style="display:flex;">
                            <img width="24px" src="@Url.Content("~/images/logo/luggage-cart-line.svg")" alt=""><div style="margin-top:0px;font-size:18px;margin-right:15px;"> @rideNumber chuyến</div>
                        </li>
                    }
                    else
                    {
                        <li style="margin-left:-35px;">
                            chưa có chuyến
                        </li>
                    }
                    
                    
                    <li >
                        @Html.DisplayFor(model => model.RentLocation)
                    </li>
                </ul>

            </div>
            <hr style="opacity:0.3;" />
            <div>
                <div style="font-weight:bold;">
                    Đặc điểm
                </div>
                <ul class="grid-li">
                    <li>
                        <div><img style="width:35px;" src="@Url.Content("~/images/logo/luggage.png")" /></div>
                        <div>Số chổ</div>
                        <div style="font-weight:bold;">@Html.DisplayFor(model => model.Seat)</div>
                    </li>
                    <li>
                        <div><img style="width:35px;" src="@Url.Content("~/images/logo/gearbox.png")" /></div>
                        <div>Hộp số</div>
                        <div>
                            @if (Model.Gear)
                            {
                                <div style="font-weight:bold;">Số tự động</div>
                            }
                            else
                            {
                                <div style="font-weight:bold;">Số sàn</div>
                            }
                        </div>
                    </li>
                    <li>
                        <div><img style="width:35px;" src="@Url.Content("~/images/logo/fuel.png")" /></div>
                        <div>Nhiên liệu</div>
                        <div style="font-weight:bold;">
                            @Html.DisplayFor(model => model.Fuel)
                        </div>
                    </li>
                    <li>
                        <div><img style="width:35px;" src="@Url.Content("~/images/logo/car-engine.png")" /></div>
                        <div>Nhiên liệu tiêu hao</div>
                        <div style="font-weight:bold;">
                            @Html.DisplayFor(model => model.FuelConsumed) lít/100km
                        </div>
                    </li>
                </ul>
            </div>

            <hr style="opacity:0.3;" />

            <div>
                <div style="font-weight:bold;">Mô tả</div>
                <div>
                    @Html.DisplayFor(model => model.Description)
                </div>
            </div>

            <hr style="opacity:0.3;" />

            <div>
                <div style="font-weight:bold;">
                    Các tiện nghi khác
                </div>
                <div class="grid-li">
                    @foreach (var amenity in ViewBag.PostAmenities)
                    {
                        var foundImage = false;
                        foreach (var img in ViewBag.PostIMG)
                        {
                            if (img.Name == amenity.Name)
                            {
                                <div class="item" style="padding:10px;">
                                    <img src="@img.IconImage" style="width:24px;margin-right:10px;" alt="@img.Name" />
                                    <span>@amenity.Name</span>
                                </div>
                                foundImage = true;
                                break;
                            }
                        }
                        if (!foundImage)
                        {
                            <div class="item">
                                No image found for @amenity.Name
                            </div>
                        }
                    }
                </div>
            </div>

            <hr style="opacity:0.3;" />

            <div>
                <div style="font-weight:bold;">
                    Giấy tờ thuê xe ?
                </div>
                <div>
                    <div class="flex-container">
                        <div class="small-div"></div>
                        <div class="large-div" style="padding:10px 20px;">
                            <span> ! Chọn 1 trong 2 hình thức</span>
                            <div style="margin-left:10px;margin-block:5px;font-weight:600;">
                                <img style="width:35px;margin-right:10px;" src="@Url.Content("~/images/logo/driving-license.png")" />
                                   GPLX & CCCD gắn chip(Đối chiếu)
                            </div>
                            <div style="margin-left:10px;font-weight:600;">
                                <img style="width:35px;margin-right:10px;" src="@Url.Content("~/images/logo/gplx_passport.png")" />
                                  GPLX(Đối chiếu) & Passport(Giữ lại)
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div>
                <div style="font-weight:bold;">
                    Tài sản thế chấp ?
                </div>
                <div>
                    <div class="flex-container">
                        <div class="small-div"></div>
                        <div class="large-div">
                            <span> 15 triệu (tiền mặt/chuyển khoản cho chủ xe khi nhận xe) hoặc Xe máy (kèm cà vẹt gốc) giá trị 15 triệu</span>
                        </div>
                    </div>
                </div>
            </div>



            <div>
                <div>Điều khoản</div>
            </div>

            <div>
                <div>
                    Chính sách hủy chuyến
                </div>
            </div>











            <hr style="opacity:0.3;" />
             <div>
                @{
                    var user = await UserManager.FindByIdAsync(Model.CreatedById);
                }
                <span>Chủ xe</span>
                <div style="display:flex;">
                    <img src="@Url.Content(user.Image)" style="width:70px;height:70px;border-radius:50%;" />
                    <div style="margin-left:20px;">
                        <span style="font-weight:bold;font-size:25px;">@user.Name</span>
                        <div>
                            <i>
                                @if (rideNumber > 0)
                                {
                                    <div style="display:flex;">
                                        <li style="margin-right:10px;">
                                            5.0
                                        </li>
                                        <li>
                                            @rideNumber chuyến
                                        </li>
                                    </div>
                                }
                                else
                                {
                                    <li style="">
                                        chưa có chuyến
                                    </li>
                                }
                            </i>
                        </div>
                    </div>
                    
                </div>
                <div>
                    <ul class="grid-li">
                        <li>
                            <div>
                                Tỉ lệ phản hồi
                            </div>
                            <div>
                                100%
                            </div>
                        </li>
                        <li>
                            <div>
                                Thời gian phản hồi
                            </div>
                            <div>
                                5 phút
                            </div>
                        </li>
                        <li>
                            <div>
                                Tỉ lệ đồng ý
                            </div>
                            <div>
                                100%
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
 

            <div>
                Đánh giá

                <div class="comment">

                    <h2>Comments</h2>
                    @if (ViewData["Cmt"] != null)
                    {
                        var comments = ViewData["Cmt"] as List<Rating>;
                        foreach (var comment in comments)
                        {
                            <div class="comment-avatar">
                                @{
                                    var user0 = await UserManager.FindByIdAsync(comment.CreatedById);
                                }
                                <img src="@user0.Image" alt="hinhanh.jpg" />
                            </div>
                            <div>
                                <p>@comment.Comment</p>
                                <p>
                                    Rating:
                                    @for (int i = 0; i < comment.Point; i++)
                                    {
                                        <img width="24px" src="@Url.Content("~/images/logo/star-s-fill.svg")" alt="">
                                    }
                                </p>
                            </div>
                        }
                    }
                    else
                    {
                        <p>Không có đánh giá.</p>
                    }




            <!-- <div>
                <partial name ="AddComment"  />
            </div> -->

            </div>





            </div>
            <div class="sub-img">
                Trống
                <div class="">
                    @{
                        var currentUser = await UserManager.GetUserAsync(User);
                        Booking booking;
                        var recieveOn = DateTime.Today;
                        var returnOn = recieveOn.AddDays(1);
                        if (Model != null && Model.Id != null && Model.Price != null && currentUser != null && currentUser.Id != null)
                        {
                            booking = new Booking()
                            {
                                PostId = Model.Id,
                                UserId = currentUser.Id,
                                CreatedOn = DateTime.Now,
                                RecieveOn = DateTime.Today,
                                ReturnOn = returnOn,
                                Total = Model.Price,
                                PrePayment = Model.Price * (decimal)0.3,
                                FinalValue = Model.Price
                            };
                        }
                        else
                        {
                            booking = new Booking()
                            {
                                PostId = Model.Id,
                                UserId = "1",
                                CreatedOn = DateTime.Now,
                                RecieveOn = DateTime.Today,
                                ReturnOn = returnOn,
                                Total = Model.Price,
                                PrePayment = Model.Price * (decimal)0.3,
                                FinalValue = Model.Price
                            };
                        }
                        
                    }
                    <div class="">
                        <form asp-controller="Bookings" asp-action="Create">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="@booking.PostId" class="control-label"></label>
                                <input asp-for="@booking.PostId" class="form-control" readonly />
                            </div>
                            <div class="form-group">
                                <label asp-for="UserId" class="control-label"></label>
                                <input asp-for="UserId" class="form-control" readonly />
                            </div>
                            <div class="form-group">
                                <label asp-for="@booking.RecieveOn" class="control-label"></label>
                                <input asp-for="@booking.RecieveOn" type="date" id="startDate" class="form-control" onchange="validateDate()" />
                                <span asp-validation-for="@booking.RecieveOn" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="@booking.ReturnOn" class="control-label"></label>
                                <input asp-for="@booking.ReturnOn" type="date" id="endDate" class="form-control" onchange="validateDate()" />
                                <span asp-validation-for="@booking.ReturnOn" class="text-danger"></span>
                            </div>
                            @* <div class="form-group">
                                <label asp-for="@booking.RecieveOn" class="control-label"></label>
                                <input asp-for="@booking.RecieveOn" type="date" id="startDate" class="form-control" />
                                <span asp-validation-for="@booking.RecieveOn" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="@booking.ReturnOn" class="control-label"></label>
                                <input asp-for="@booking.ReturnOn" type="date" id="endDate" class="form-control" />
                                <span asp-validation-for="@booking.ReturnOn" class="text-danger"></span>
                            </div> *@
                            <div class="form-group">
                                <label asp-for="@booking.Total" class="control-label"></label>
                                <input asp-for="@booking.Total" id="Total" class="form-control" readonly />
                                <span asp-validation-for="@booking.Total" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="@booking.PromotionId" class="control-label"></label>
                                <select asp-for="@booking.PromotionId" class="form-control" asp-items="ViewBag.Promotions"></select>
                            </div>
                            <div class="form-group">
                                <label asp-for="@booking.FinalValue" class="control-label"></label>
                                <input asp-for="@booking.FinalValue" class="form-control" readonly />
                                <span asp-validation-for="@booking.FinalValue" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="@booking.PrePayment" class="control-label"></label>
                                <input asp-for="@booking.PrePayment" class="form-control" readonly />
                                <span asp-validation-for="@booking.PrePayment" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </form>
                    </div>
                </div>

            </div>


        </div>
        
</div>
    

<div>
    @{
         // var currentUser = await UserManager.GetUserAsync(User);
        if(SignInManager.IsSignedIn(User))
        {
            if (currentUser!.Id == Model.UserId)
            {
                <a asp-action="Edit" asp-route-id="@Model?.Id">Chỉnh sửa</a>
            }
        }
    }

    <a asp-area="Customer" asp-controller="Bookings" asp-action="Create" asp-route-userId="@Model?.UserId" asp-route-postId="@Model?.Id">Đặt cọc</a> |
    <a href="javascript:history.go(-1);">Quay lại</a>
</div>




    <script>
        function validateDate() {
            var startDate = document.getElementById("startDate").value;
            var endDate = document.getElementById("endDate").value;

            // Chuyển đổi các chuỗi ngày thành đối tượng Date để so sánh
            var start = new Date(startDate);
            var end = new Date(endDate);

            // Kiểm tra nếu RecieveOn lớn hơn ReturnOn
            if (start > end) {
                // Hiển thị thông báo lỗi
                alert("RecieveOn không được lớn hơn ReturnOn");
                // Thiết lập giá trị của RecieveOn là ngày hiện tại
                document.getElementById("startDate").value = new Date().toISOString().split('T')[0];
                // Thiết lập giá trị của ReturnOn là ngày kế tiếp của RecieveOn
                document.getElementById("endDate").value = new Date(start.getTime() + 86400000).toISOString().split('T')[0];
            }
        }
        $(document).ready(function () {
            $('#startDate, #endDate').change(function () {
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();
                var total = @Model.Price;
                if (startDate && endDate) {
                    $.ajax({
                        url: '/Customer/Bookings/CalculateMiddleDate',
                        type: 'POST',
                        data: { startDate: startDate, endDate: endDate, total: total },
                        success: function (result) {
                            var numberOfDays = parseInt(result);
                            $('#Total').val(numberOfDays);
                        }
                    });
                }
            });
        });

    </script>



<style>
    .flex-container {
        display: flex;
    }

    .small-div {
        flex: 0 0 1%;
        background-color: #f26a2b; /* Màu nền của div đầu tiên */
        border-top-left-radius: 10px; /* Độ cong góc trái trên */
        border-bottom-left-radius: 10px; /* Độ cong góc trái dưới */
    }

    .large-div {
        flex: 0 0 99%;
        background-color: #fef7f0;
    }
    .grid-li {
        display: grid;
        grid-template-columns: repeat(4, 1fr); /* 4 cột bằng nhau */
        gap: 10px; /* Khoảng cách giữa các cột */
    }
    .cover-car-container {
        display: flex;
        position: relative;
        grid-gap: 16px;
        gap: 16px;
        width: 100%;
    }

        .cover-car-container .main-img {
            position: relative;
            width: calc(68% - 16px);
            height: 100%;
        }

        .cover-car-container .sub-img {
            width: 32%;
            height: 100%;
            display: flex;
            flex-direction: column;
            grid-gap: 16px;
            gap: 16px;
        }

            .cover-car-container .sub-img img {
                height: 176px;
            }
    .cover-car-item {
        cursor: pointer;
    }

    .cover-car-item img {
    width: 100%;
    height: 560px;
    border-radius: 16px;
    object-fit: cover;
}
    .comment-item {
        display: flex;
        margin-bottom: 20px;
    }

    .comment-avatar img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }

    .comment-content {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        margin-left: 10px;
    }

        .comment-content .rating {
            font-size: 20px;
        }

        .comment-content .star {
            color: #FFD700;
            display: inline-block;
        }

        .comment-content .star-none{
            color: none;
            display: inline-block;
        }

        .comment-content .comment-text {
            margin-top: 5px;
            font-size: 14px;
        }
</style>



