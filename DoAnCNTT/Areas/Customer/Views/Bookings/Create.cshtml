@model DoAnCNTT.Models.Booking
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Create";
}

<div class="">
    <div class="" style="padding:20px;">
        <h3 style="font-size:30px;">@Model.Total/Giờ</h3>
        <form asp-controller="Bookings" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" hidden>
                <label asp-for="PostId" class="control-label"></label>
                <input asp-for="PostId" class="form-control"  />
            </div>
            <div class="form-group" hidden>
                <label asp-for="UserId" class="control-label"></label>
                <input asp-for="UserId" class="form-control"  />
            </div>
            @* <div class="form-group">
               <label asp-for="RecieveOn" class="control-label">Ngày nhận xe</label>
                <input asp-for="RecieveOn" type="datetime-local" id="startDate" class="form-control" onchange="validateDate()" />
               <span asp-validation-for="RecieveOn" class="text-danger"></span>
            </div>
            <div class="form-group">
               <label asp-for="ReturnOn" class="control-label">Ngày trả xe</label>
                <input asp-for="ReturnOn" type="datetime-local" id="endDate" class="form-control" onchange="validateDate()" />
               <span asp-validation-for="ReturnOn" class="text-danger"></span>
            </div> *@
            
            <div class="date-time-form">
                <div class="form-item">
                    <label>Nhận xe</label>
                    <div class="wrap-date-time" id="start">
                        <div class="wrap-date">
                            <span class="value">
                                <input asp-for="RecieveOn" type="datetime" id="startDate1" class="form-control inputcreate" onchange="validateDate()" />
                            </span>
                        </div>
                        <div class="wrap-time">
                            <span class="value">21:00</span>
                        </div>
                    </div>
                </div>
                <div class="line"></div>
                <div class="form-item">
                    <label>Trả xe</label>
                    <div class="wrap-date-time" id="end">
                        <div class="wrap-date">
                            <span class="value">
                                <input asp-for="ReturnOn" type="datetime" id="endDate1" class="form-control inputcreate" />
                            </span>
                        </div>
                        <div class="wrap-time">
                            <span class="value">20:00</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="calendar block">
                <label id="x" style="border-radius: 15px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); width: 10px; height: 10px;">X</label>
                <div class="header">
                    <div class="month"></div>
                    <div class="btns">
                        <div class="btn today-btn">
                            <i class="fas fa-calendar-day"></i>
                        </div>
                        <div class="btn prev-btn">
                            <i class="fas fa-chevron-left"></i>
                        </div>
                        <div class="btn next-btn">
                            <i class="fas fa-chevron-right"></i>
                        </div>
                    </div>
                </div>
                <div class="weekdays">
                    <div class="day">Cn</div>
                    <div class="day">T2</div>
                    <div class="day">T3</div>
                    <div class="day">T4</div>
                    <div class="day">T5</div>
                    <div class="day">T6</div>
                    <div class="day">T7</div>
                </div>
                <div class="days">
                    <!-- Days will be added dynamically using jQuery -->
                </div>
                <div>
                    <label class="labeldate active" id="startDateBtn">Ngày nhận</label>
                    <label class="labeldate" id="endDateBtn">Ngày trả</label>
                </div>
            </div>

            @* </div> *@



            <div class="form-group">
                <label asp-for="Total" class="control-label">Tổng cộng</label>
                <input asp-for="Total" id="Total" class="form-control" readonly style="border:none;background-color:white;" />
                <span asp-validation-for="Total" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PromotionId" class="control-label">Khuyến mãi: </label>
                <select asp-for="PromotionId" id="promotionSelect" class="form-control" asp-items="ViewBag.Promotions"></select>
            </div>
                <div class="form-group">
                    <label asp-for="Total" class="control-label">Thành tiền</label>
                    <input asp-for="FinalValue" class="form-control" id="finalValue" readonly style="border:none;background-color:white;" />
                    <span asp-validation-for="FinalValue" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Total" class="control-label">Đặt cọc</label>
                    <input asp-for="PrePayment" class="form-control" id="prePayment" readonly style="border:none;background-color:white;" />
                    <span asp-validation-for="PrePayment" class="text-danger"></span>
                </div>
      
            
            <div class="form-group">
                @{
                    if (@ViewBag.IsAvailable == false)
                    {
                        <input style="margin-top:20px;" type="submit" value="Thuê xe" class="btn btn-primary w" disabled />
                    }
                    else
                    {
                        <input style="margin-top:20px;" type="submit" value="Thuê xe" class="btn btn-primary w" />
                    }
                }
            </div>
        </form>
    </div>
</div>



<style>



    
</style>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
        function validateDate() {
            var startDate = document.getElementById("startDate").value;
            var endDate = document.getElementById("endDate").value;

            // Chuyển đổi các chuỗi ngày thành đối tượng Date để so sánh
            var start = new Date(startDate);
            var end = new Date(endDate);

            // Kiểm tra nếu RecieveOn lớn hơn ReturnOn
            if (start > end) {
                // Hiển thị thông báo lỗi
                alert("Thời gian nhận xe phải trước thời gian trả");
                // Thiết lập giá trị của RecieveOn là ngày hiện tại
                document.getElementById("startDate").value = new Date().toISOString().split('T')[0];
                // Thiết lập giá trị của ReturnOn là ngày kế tiếp của RecieveOn
                document.getElementById("endDate").value = new Date(start.getTime() + 86400000).toISOString().split('T')[0];
            }
        }

    $(document).ready(function () {
        $('#startDate, #endDate').change(function () {
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();
            var total = @Model!.Total;
            if (startDate && endDate) {
                $.ajax({
                    url: '/Customer/Bookings/CalculateMiddleDate',
                    type: 'POST',
                    data: { startDate: startDate, endDate: endDate, total: total },
                    success: function (result) {
                        $('#Total').val(result);
                        $('#finalValue').val(result);
                        $('#prePayment').val(result * 0.5);
                    }
                });
            }
        });

        $('#Total, #promotionSelect').change(function () {
            var promotionId = $('#promotionSelect').val();
            var total = $('#Total').val();

            $.ajax({
                url: '/Customer/Bookings/CalculateFinalValue',
                type: 'POST',
                data: { total: total, promotionId: promotionId },
                success: function (result) {
                    $('#finalValue').val(result.total);
                    $('#prePayment').val(result.total * 0.5);
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });

            let selectingPickup = true;
            const $daysContainer = $(".days"),
                $nextBtn = $(".next-btn"),
                $prevBtn = $(".prev-btn"),
                $month = $(".month"),
                $todayBtn = $(".today-btn");

            const months = [
                "January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
            ];

            const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

            let currentDate = new Date(),
                currentMonth = currentDate.getMonth(),
                currentYear = currentDate.getFullYear(),
                pickupDate = null,
                returnDate = null;

            function renderCalendar() {
                currentDate.setDate(1);
                const firstDay = new Date(currentYear, currentMonth, 1),
                    lastDay = new Date(currentYear, currentMonth + 1, 0),
                    lastDayIndex = lastDay.getDay(),
                    lastDayDate = lastDay.getDate(),
                    prevLastDay = new Date(currentYear, currentMonth, 0),
                    prevLastDayDate = prevLastDay.getDate(),
                    nextDays = 7 - lastDayIndex - 1;

                $month.text(`${months[currentMonth]} ${currentYear}`);

                let daysHtml = "";
                for (let x = firstDay.getDay(); x > 0; x--) {
                    daysHtml += `<div class="day prev">${prevLastDayDate - x + 1}</div>`;
                }
                for (let i = 1; i <= lastDayDate; i++) {
                    const date = new Date(currentYear, currentMonth, i);
                    let classNames = "day";
                    if (date.toDateString() === new Date().toDateString()) {
                        classNames += " today";
                    }
                    if (pickupDate && date.toDateString() === pickupDate.toDateString()) {
                        classNames += " pickup";
                    }
                    if (returnDate && date.toDateString() === returnDate.toDateString()) {
                        classNames += " return";
                    }
                    if (selectingPickup) {
                        if (returnDate && date >= returnDate) {
                            classNames += " disabled";
                        }
                    } else {
                        if (pickupDate && date <= pickupDate) {
                            classNames += " disabled";
                        }
                    }
                    daysHtml += `<div class="${classNames}">${i}</div>`;
                }
                for (let j = 1; j <= nextDays; j++) {
                    daysHtml += `<div class="day next">${j}</div>`;
                }

                hideTodayBtn();
                $daysContainer.html(daysHtml);
            }

            renderCalendar();

            $nextBtn.on("click", function () {
                currentMonth++;
                if (currentMonth > 11) {
                    currentMonth = 0;
                    currentYear++;
                }
                renderCalendar();
            });

            $prevBtn.on("click", function () {
                currentMonth--;
                if (currentMonth < 0) {
                    currentMonth = 11;
                    currentYear--;
                }
                renderCalendar();
            });

            $todayBtn.on("click", function () {
                currentMonth = currentDate.getMonth();
                currentYear = currentDate.getFullYear();
                renderCalendar();
            });

            function hideTodayBtn() {
                if (
                    currentMonth === new Date().getMonth() &&
                    currentYear === new Date().getFullYear()
                ) {
                    $todayBtn.css("display", "none");
                } else {
                    $todayBtn.css("display", "flex");
                }
            }

            $('.labeldate').click(function () {
                $('.labeldate').removeClass('active');
                $(this).addClass('active');
                selectingPickup = $(this).is('#startDateBtn');
                renderCalendar();
            });

            $(document).on("click", ".day", function () {
                if ($(this).hasClass("disabled")) return;

                const day = $(this).text();
                const selectedDate = new Date(currentYear, currentMonth, day);

                if (selectingPickup) {
                    pickupDate = selectedDate;
                    $('#startDate1').val(formatDate(selectedDate));
                    $('#startDate1').trigger('change');
                } else {
                    returnDate = selectedDate;
                    $('#endDate1').val(formatDate(selectedDate));
                }

                // Xóa class 'today' và thêm class 'doimaudate' cho ngày được nhấn
                $('.day').removeClass('today');
                $('.day').removeClass('doimaudate');
                $(this).addClass('doimaudate');

                renderCalendar();
            });

            function formatDate(date) {
                var month = '' + (date.getMonth() + 1);
                var day = '' + date.getDate();
                var year = date.getFullYear();

                if (month.length < 2) month = '0' + month;
                if (day.length < 2) day = '0' + day;

                return [year, month, day].join('-');
            }

            $('#startDate1, #endDate1').focus(function () {
                $('.calendar').removeClass('block');
            });

            $('#start, #end').on("click", function () {
                $('.calendar').removeClass('block');
            });

            $('#x').click(function () {
                $('.calendar').addClass('block');
            });
        });

</script>



